using System.ComponentModel;
using $projectNs$.Base.Core;
using $projectNs$.Objects.Implementation;
using Dapper;
using System.Collections.Generic;

namespace $projectNs$.Objects.Implementation
{
    public abstract class Entity
    {
        protected int _iD;
        public virtual int ID => _iD;

        internal IDbContext _context { get; set; }

        #region PropertyChange

        public event PropertyChangedEventHandler PropertyChanged;
        public void NotifyPropertyChanged(string propertyName)
        {
            if (PropertyChanged != null)
                PropertyChanged.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion

		#region Methods

		internal virtual Dictionary<string, object> GetColumns()
        {
            return null;
        }

		internal virtual void Copy(Entity en)
		{
			return;
		}

		#endregion
    }
}
